--- snoop.jl	2023-02-21 11:33:41
+++ snoop.patched.jl	2023-02-21 10:25:51
@@ -1,8 +1,31 @@
-using Random
-rng = MersenneTwister(1234)
+import Random
+rng = nothing
 
 using GR
 
+libc_rand_directory_path = get(ENV, "LIBC_RAND_DIRPATH", ".")
+
+function c_rand(num_elements:: Int32):: Ptr{Float64}
+    return ccall((:rnd, joinpath(libc_rand_directory_path, "libc_rand")), Ptr{Float64}, (Ptr{Float64}, Int32), C_NULL, num_elements)
+end
+
+function c_randn(num_elements:: Int32):: Ptr{Float64}
+    return ccall((:randn, joinpath(libc_rand_directory_path, "libc_rand")), Ptr{Float64}, (Ptr{Float64}, Int32), C_NULL, num_elements)
+end
+
+function rand(rng:: Union{Nothing, Random.AbstractRNG}, dims:: Int...):: Array{Float64}
+    num_elements = reduce(*, dims)
+    c_data = c_rand(Int32(num_elements))
+    return unsafe_wrap(Array, c_data, dims, own = true)
+end
+
+function randn(rng:: Union{Nothing, Random.AbstractRNG}, dims:: Int...):: Array{Float64}
+    num_elements = reduce(*, dims)
+    c_data = c_randn(Int32(num_elements))
+    return unsafe_wrap(Array, c_data, dims, own = true)
+end
+
+
 x = 0:π/100:2π
 y = sin.(x)
 plot(x, y)
@@ -116,34 +139,8 @@
 y = randn(rng, N)
 shade(x, y)
 
-setprojectiontype(0)
+barplot(randn(rng, 20))
 
-clearws()
-xd = -2 .+ 4 * rand(rng, 100)
-yd = -2 .+ 4 * rand(rng, 100)
-zd = [xd[i] * exp(-xd[i]^2 - yd[i]^2) for i = 1:100]
-
-setwsviewport(0, 0.1, 0, 0.1)
-setwswindow(0, 1, 0, 1)
-
-setviewport(0.1, 0.95, 0.1, 0.95)
-setwindow(-2, 2, -2, 2)
-setspace(-0.5, 0.5, 0, 90)
-
-setcolormap(0)
-setlinecolorind(1)
-setmarkersize(1)
-setmarkertype(-1)
-setmarkercolorind(1)
-setcharheight(0.024)
-settextalign(2, 0)
-settextfontprec(3, 0)
-
-x, y, z = gridit(xd, yd, zd, 200, 200)
-h = -0.5:0.05:0.5
-surface(x, y, z, 5)
-contour(x, y, h, z, 0)
-polymarker(xd, yd)
-GR.axes(0.25, 0.25, -2, -2, 2, 2, 0.01)
-
-updatews()
+x = LinRange(0, 1, 51)
+y = x .- x.^2
+stairs(x, y)
